{
 "meta": {
  "generator": "0.11.1",
  "format": 22,
  "date": 1655131140174
 },
 "custom": {
  "general": {
   "name": "General",
   "files": {
    "welcome": {
     "name": "Welcome",
     "type": "md",
     "content": "## Welcome\n\n<strong>Welcome! This is \"@badboy-discord/discordjs-handler\" module!</strong> <br>\n<strong>This is module that will simplify creating Command and Event Handlers for you Discord Bot!</strong>\n\n## Installation\n\n<strong>Please note: NodeJS v16.6 or above required for this module!</strong>\n\n<code>$ npm i @badboy-discord/discordjs-handler</code>\n\n## Features\n\n<strong>[üôÇ] Easy to use.</strong> <br />\n<strong>[üëç] Beginner friendly.</strong> <br />\n<strong>[üîë] TypeScript Support.</strong> <br />\n<strong>[‚öôÔ∏è] 100% Promise-based</strong>\n\n## Initialization\n\n<strong>To initializate module, you need to write this code in bot main file.</strong> <br>\n<strong>Or you can view our [examples folder](https://github.com/discordjs-handler/source/tree/stable/examples).</strong> <br>\n\n```js\nconst { Client } = require(\"discord.js\");\nconst { Handler } = require(\"@badboy-discord/discordjs-handler\");\n\nconst client = new Client({\n  intents: [\"GUILDS\", \"GUILD_MESSAGES\"],\n});\nconst handler = new Handler({\n  commandsDir: `${__dirname}/commands`,\n  slashCommandsDir: `${__dirname}/slashCommands`,\n  eventsDir: `${__dirname}/events`,\n\n  searchPattern: \"**/*{.js,.ts}\",\n});\n```\n\n## Links\n\n<b>Authors: [badboy-discord](https://www.npmjs.com/~badboy-discord), [xyligan-gp](https://www.npmjs.com/~xyligan-gp)<br>\n<b>Discord Tags: [WhyMe#1126](https://discord.com/users/852921856800718908), [‚ô° x“Ø‚Ñì[Œπ]gŒ±Œ∑4Œµg ‚ô°#9457](https://discord.com/users/533347075463577640)<br>\n<b>NodeJS: [Click](https://www.nodejs.org/)<br>\n<b>TypeScript: [Click](https://www.typescriptlang.org)<br>\n<b>Support Server: [Click](https://discord.gg/zsTgXs24k2)<br>\n<b>Website: [Click](https://discordjs-handler.js.org/)</b>\n",
     "path": "pages/general/welcome.md"
    },
    "changelog": {
     "name": "Changelog",
     "type": "md",
     "content": "# Module Changelog\n\n- **Version 1.0.0**\n  - Release module\n- **Version 1.0.1**\n  - Code Fixes\n  - [New Website](https://discordjs-handler.js.org/)\n  - Added more JSDoc\n- **Version 1.1.0 - Global Update**\n  - Full Rewrite\n- **Version 1.1.1 - Global Update**\n  - Code Fixes\n",
     "path": "pages/general/changelog.md"
    }
   }
  }
 },
 "classes": [
  {
   "name": "Command",
   "description": "Command Class",
   "props": [
    {
     "name": "name",
     "description": "Command Name",
     "type": [
      [
       [
        "string"
       ]
      ]
     ],
     "meta": {
      "line": 22,
      "file": "Command.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "description",
     "description": "Command Description",
     "type": [
      [
       [
        "string"
       ]
      ]
     ],
     "meta": {
      "line": 28,
      "file": "Command.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "usage",
     "description": "Command Usage",
     "type": [
      [
       [
        "string"
       ]
      ]
     ],
     "meta": {
      "line": 36,
      "file": "Command.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "aliases",
     "description": "Command Aliases",
     "type": [
      [
       [
        "Array",
        "<"
       ],
       [
        "string",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 44,
      "file": "Command.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "cooldown",
     "description": "Command Cooldown",
     "type": [
      [
       [
        "number"
       ]
      ]
     ],
     "meta": {
      "line": 52,
      "file": "Command.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "disabled",
     "description": "Load Command at the start",
     "type": [
      [
       [
        "boolean"
       ]
      ]
     ],
     "meta": {
      "line": 60,
      "file": "Command.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "ownerOnly",
     "description": "For Owner or not",
     "type": [
      [
       [
        "boolean"
       ]
      ]
     ],
     "meta": {
      "line": 68,
      "file": "Command.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "userPerms",
     "description": "Required User Permissions",
     "type": [
      [
       [
        "Array",
        "<"
       ],
       [
        "PermissionString",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 76,
      "file": "Command.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "botPerms",
     "description": "Required Bot Permissions",
     "type": [
      [
       [
        "Array",
        "<"
       ],
       [
        "PermissionString",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 84,
      "file": "Command.ts",
      "path": "src/classes"
     }
    }
   ],
   "methods": [
    {
     "name": "run",
     "description": "Run Method",
     "params": [
      {
       "name": "client",
       "description": "Discord Client",
       "type": [
        [
         [
          "Client"
         ]
        ]
       ]
      },
      {
       "name": "message",
       "description": "Discord Message",
       "type": [
        [
         [
          "Message"
         ]
        ]
       ]
      },
      {
       "name": "args",
       "description": "Arguments",
       "type": [
        [
         [
          "Array",
          "<"
         ],
         [
          "string",
          ">"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "any"
       ]
      ]
     ],
     "meta": {
      "line": 93,
      "file": "Command.ts",
      "path": "src/classes"
     }
    }
   ],
   "meta": {
    "line": 4,
    "file": "Command.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "Event",
   "description": "Event Class",
   "props": [
    {
     "name": "name",
     "description": "Event Name",
     "type": [
      [
       [
        "string"
       ]
      ]
     ],
     "meta": {
      "line": 16,
      "file": "Event.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "emitter",
     "description": "Event Emitter",
     "type": [
      [
       [
        "string"
       ]
      ]
     ],
     "meta": {
      "line": 22,
      "file": "Event.ts",
      "path": "src/classes"
     }
    }
   ],
   "methods": [
    {
     "name": "run",
     "description": "Run Method",
     "params": [
      {
       "name": "client",
       "description": "Discord Client",
       "type": [
        [
         [
          "Client"
         ]
        ]
       ]
      },
      {
       "name": "handler",
       "description": "Handler",
       "type": [
        [
         [
          "Handler"
         ]
        ]
       ]
      },
      {
       "name": "params",
       "description": "Parameters",
       "variable": true,
       "type": [
        [
         [
          "Array",
          "<"
         ],
         [
          "any",
          ">"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "any"
       ]
      ]
     ],
     "meta": {
      "line": 29,
      "file": "Event.ts",
      "path": "src/classes"
     }
    }
   ],
   "meta": {
    "line": 5,
    "file": "Event.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "Handler",
   "description": "Main Class that including all Handling Functional",
   "construct": {
    "name": "Handler",
    "params": [
     {
      "name": "client",
      "description": "Discord Client",
      "type": [
       [
        [
         "Client"
        ]
       ]
      ]
     },
     {
      "name": "options",
      "description": "Module Options",
      "type": [
       [
        [
         "Options"
        ]
       ]
      ]
     }
    ]
   },
   "props": [
    {
     "name": "client",
     "description": "Discord.JS Client",
     "type": [
      [
       [
        "Client"
       ]
      ]
     ],
     "meta": {
      "line": 35,
      "file": "Handler.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "options",
     "description": "Module Options",
     "type": [
      [
       [
        "Options"
       ]
      ]
     ],
     "meta": {
      "line": 41,
      "file": "Handler.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "commands",
     "description": "Commands Collection",
     "type": [
      [
       [
        "Collection",
        "<"
       ],
       [
        "string",
        ", "
       ],
       [
        "Command",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 47,
      "file": "Handler.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "slashCommands",
     "description": "Slash Commands Collection",
     "type": [
      [
       [
        "Collection",
        "<"
       ],
       [
        "string",
        ", "
       ],
       [
        "SlashCommand",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 53,
      "file": "Handler.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "events",
     "description": "Events Collection",
     "type": [
      [
       [
        "Collection",
        "<"
       ],
       [
        "string",
        ", "
       ],
       [
        "Event",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 59,
      "file": "Handler.ts",
      "path": "src/classes"
     }
    }
   ],
   "methods": [
    {
     "name": "init",
     "description": "Method that initializing module.",
     "access": "private",
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 78,
      "file": "Handler.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "loadCommands",
     "description": "Method that loads all the availible Commands",
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 94,
      "file": "Handler.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "loadSlashCommands",
     "description": "Method that loads all the availible Slash Commands",
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 121,
      "file": "Handler.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "loadEvents",
     "description": "Method that loads all the availible Events",
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 150,
      "file": "Handler.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "registerSlashCommands",
     "description": "Method that Registering Slash Commands to All the Guilds",
     "access": "private",
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        "|"
       ],
       [
        "string",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 180,
      "file": "Handler.ts",
      "path": "src/classes"
     }
    }
   ],
   "meta": {
    "line": 22,
    "file": "Handler.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "SlashCommand",
   "description": "Command Class",
   "props": [
    {
     "name": "name",
     "description": "Slash Command Name",
     "type": [
      [
       [
        "string"
       ]
      ]
     ],
     "meta": {
      "line": 24,
      "file": "SlashCommand.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "description",
     "description": "Slash Command Description",
     "type": [
      [
       [
        "string"
       ]
      ]
     ],
     "meta": {
      "line": 30,
      "file": "SlashCommand.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "disabled",
     "description": "Load command at the start",
     "type": [
      [
       [
        "boolean"
       ]
      ]
     ],
     "meta": {
      "line": 36,
      "file": "SlashCommand.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "type",
     "description": "Slash Command Type",
     "type": [
      [
       [
        "ApplicationCommandTypes"
       ]
      ]
     ],
     "meta": {
      "line": 44,
      "file": "SlashCommand.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "options",
     "description": "Slash Command Options",
     "type": [
      [
       [
        "Array",
        "<"
       ],
       [
        "ApplicationCommandOptionData",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 52,
      "file": "SlashCommand.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "defaultPermission",
     "description": "Whether the command is enabled by default when the app is added to a guild",
     "type": [
      [
       [
        "boolean"
       ]
      ]
     ],
     "meta": {
      "line": 60,
      "file": "SlashCommand.ts",
      "path": "src/classes"
     }
    }
   ],
   "methods": [
    {
     "name": "run",
     "description": "Run Method",
     "params": [
      {
       "name": "client",
       "description": "Discord Client",
       "type": [
        [
         [
          "Client"
         ]
        ]
       ]
      },
      {
       "name": "message",
       "description": "Discord Message",
       "type": [
        [
         [
          "Message"
         ]
        ]
       ]
      },
      {
       "name": "args",
       "description": "Arguments",
       "type": [
        [
         [
          "Array",
          "<"
         ],
         [
          "string",
          ">"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "any"
       ]
      ]
     ],
     "meta": {
      "line": 69,
      "file": "SlashCommand.ts",
      "path": "src/classes"
     }
    }
   ],
   "meta": {
    "line": 9,
    "file": "SlashCommand.ts",
    "path": "src/classes"
   }
  }
 ],
 "interfaces": [],
 "typedefs": [],
 "externals": []
}